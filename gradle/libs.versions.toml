###
# This section is where we declare the versioning and scope for dependencies of
# the Web5 platform and projects building atop the Web5 platform.
#
# Submodules of Web5 should not define their own dependency versions
# because these must all co-exist in the same ClassLoading environment, and
# therefore have to be aligned across submodules. Thus we declare the versioning
# requirements here at the platform level.
#
# If a submodule needs to introduce a new dependency or upgrade, define that
# dependency and version here such that other submodules in the build may pick
# up the same version. This will guarantee that submodule test suites are running
# in the correct ClassLoading environment aligned with the Web5 platform.
#
# WARNING: The manual "force" clauses in "./build.gradle.kts" will override
# anything we declare here. If you're wondering why dependencies (and transitive deps)
# aren't resolving as declared here, check there.
#
# More about Gradle Version Catalogs:
# https://docs.gradle.org/current/userguide/platforms.html
#
# Helpful Blog:
# https://umang91.medium.com/version-catalogs-in-gradle-7-0-816873b59b47
###

[versions]
com_amazonaws_aws_kms = "1.12.538"
com_danubetech_verifiable-credentials = "1.6.0"
com_fasterxml_jackson_module = "2.14.2"
com_github_multiformats = "1.1.0"
com_google_crypto_tink = "1.10.0"
com_networknt_json_schema_validator = "1.0.87"
com_nfeld_jsonpathkt = "2.0.1"
com_nimbusds = "9.34"
com_squareup_okhttp3 = "4.12.0"
com_willowtreeapps_assertk = "0.27.0"
decentralized_identity_did_common_java = "1.9.0"
dnsjava = "3.5.2"
io_github_erdtman_java_json_canonicalization = "1.1"
io_github_oshai_kotlin_logging = "6.0.2"
io_ktor = "2.3.7"
org_bouncycastle = "1.77"

[libraries]
comAmazonawsAwsKms = { module = "com.amazonaws:aws-java-sdk-kms", version.ref = "com_amazonaws_aws_kms" }
comDanubetechVerifiableCredentials = { module = "com.danubetech:verifiable-credentials-java", version.ref = "com_danubetech_verifiable-credentials" }
comFasterXmlJacksonModuleKotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "com_fasterxml_jackson_module" }
comGithubMultiformats = { module = "com.github.multiformats:java-multibase", version.ref = "com_github_multiformats" }
comGoogleCryptoTink = { module = "com.google.crypto.tink:tink", version.ref = "com_google_crypto_tink" }
comNetworkntJsonSchemaValidator = { module = "com.networknt:json-schema-validator", version.ref = "com_networknt_json_schema_validator" }
comNfeldJsonpathkt = { module = "com.nfeld.jsonpathkt:jsonpathkt", version.ref = "com_nfeld_jsonpathkt" }
comNimbusdsJoseJwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "com_nimbusds" }
comSquareupOkhttp3 = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "com_squareup_okhttp3" }
comWillowtreeappsAssertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "com_willowtreeapps_assertk" }
decentralizedIdentityDidCommonJava= { module = "decentralized-identity:did-common-java", version.ref = "decentralized_identity_did_common_java" }
dnsJava = { module = "dnsjava:dnsjava", version.ref = "dnsjava" }
orgBouncycastleBcprov = { module = "org.bouncycastle:bcprov-jdk15to18", version.ref = "org_bouncycastle" }
orgBouncycastleBcpkix = { module = "org.bouncycastle:bcpkix-jdk15to18", version.ref = "org_bouncycastle" }
ioGithubErdtmanJavaJsonCanonicalization = { module = "io.github.erdtman:java-json-canonicalization", version.ref = "io_github_erdtman_java_json_canonicalization" }
ioGithubOshaiKotlinLogging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "io_github_oshai_kotlin_logging" }
ioKtorClientCore = { module = "io.ktor:ktor-client-core", version.ref = "io_ktor" }
ioKtorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "io_ktor" }
ioKtorClientMock = { module = "io.ktor:ktor-client-mock", version.ref = "io_ktor" }
ioKtorClientOkhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "io_ktor" }
ioKtorContentClientNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "io_ktor" }
ioKtorSerializationJackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "io_ktor" }
ioKtorSerializationKotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "io_ktor" }

[bundles]
ioKtorForCredentials = [
  "ioKtorClientCore",
  "ioKtorClientLogging",
  "ioKtorClientOkhttp",
  "ioKtorContentClientNegotiation",
  "ioKtorSerializationJackson",
  "ioKtorSerializationKotlinxJson"
] # ktor-client-mock not included here as it's typically used as a test dep, not an impl dep
ioKtorForDids = [
  "ioKtorClientCore",
  "ioKtorClientOkhttp",
  "ioKtorContentClientNegotiation",
  "ioKtorSerializationJackson"
]
orgBouncycastle = [
  "orgBouncycastleBcprov",
  "orgBouncycastleBcpkix"
]